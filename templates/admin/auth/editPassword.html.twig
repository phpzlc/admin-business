{% extends '@PHPZlcAdmin/page/index.html.twig' %}

{% block main_content %}
    <div class="add-page clearfix">
        <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" label-position="left"
                 class="form-content">
            <el-form-item label="密码:" prop="oldPassword" size="mini" class="el-form-width-all">
                <el-input v-model="ruleForm.oldPassword" type="password" placeholder="请输入密码"></el-input>
            </el-form-item>

            <el-form-item label="新密码:" prop="newPassword" size="mini" class="el-form-width-all">
                <el-input v-model="ruleForm.newPassword" type="password" placeholder="请输入新密码"></el-input>
            </el-form-item>

            <el-form-item label="确认新密码:" prop="newPasswords" size="mini" class="el-form-width-all">
                <el-input v-model="ruleForm.newPasswords" type="password" placeholder="请再次输入新密码"></el-input>
            </el-form-item>

            <el-form-item size="mini">
                <el-button type="primary" @click="submitForm('ruleForm')">提交</el-button>
                <el-button @click="resetForm('ruleForm')">重置</el-button>
            </el-form-item>
        </el-form>
    </div>
{% endblock %}

{% block main_content_vue %}
    <script>
        new Vue({
            el: '#main-content',
            data: function () {
                var validatePass2 = (rule, value, callback) => {
                    if (value === '') {
                        callback(new Error('请再次输入密码'));
                    } else if (value !== this.ruleForm.newPassword) {
                        callback(new Error('两次输入密码不一致!'));
                    } else {
                        callback();
                    }
                };

                var checkPassword = (rule, value, callback) => {

                    var Expression = /^[a-zA-Z0-9]{6,18}$/;
                    var objExp = new RegExp(Expression);

                    if(objExp.test(this.ruleForm.newPassword) != true){

                        callback(new Error('密码必须为6-18位数字与字母组合'))

                    }else {
                        callback();
                    }
                };

                return {
                    ruleForm: {
                        oldPassword: '',
                        newPassword: '',
                        newPasswords: '',
                    },
                    rules: {
                        oldPassword: [
                            {  required: true, message: '请输入密码', trigger: 'blur' }
                        ],
                        newPassword: [
                            {  required: true, message: '请输入新密码', trigger: 'blur' },
                            { validator: checkPassword, trigger: 'blur' },
                        ],
                        newPasswords: [
                            {  required: true, message: '请确认新密码', trigger: 'blur' },
                            {  validator: validatePass2, trigger: 'blur' }

                        ]
                    }
                }
            },
            created() {
                // 页面初始化使用
                console.log(1);
            },
            methods: {
                submitForm(formName) {
                    const that = this;
                    this.$refs[formName].validate((valid) => {
                        if (valid) {
                            $.post("{{ path('admin_auth_edit_password') }}", that.ruleForm, function(data) {
                                resultPreprocess(that, data,'{{ path('admin_auth_edit_password') }}','')
                            }, )
                        } else {
                            console.log('error submit!!');
                            return false;
                        }
                    });
                },
                resetForm(formName) {
                    this.$refs[formName].resetFields();
                }
            }
        })
    </script>
{% endblock %}